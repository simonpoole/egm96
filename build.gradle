/*
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}


plugins {
    id 'java'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
    id "org.sonarqube" version "2.7"
}

repositories {
    jcenter()
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

group = 'ch.poole.geo'
version = '0.1.0'
sourceCompatibility = '1.8'

ext {
    repoUrl = 'https://github.com/simonpoole/egm96.git'
    spdxId = 'NASA-1.3'
    ourName = 'EarthGravitationalModel96'
}

// Exclude all resources from the jar
jar {
    processResources.exclude('*')
}

java {
    withJavadocJar()
    withSourcesJar()
}
    
javadoc {
    failOnError = false
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId group
            artifactId ourName
            artifact jar
            artifact sourcesJar
            artifact javadocJar
            pom {
                url = repoUrl
                scm {
                    url = repoUrl
                }
                licenses {
                    license {
                        name = spdxId
                        url = 'https://spdx.org/licenses/NASA-1.3.html#licenseText'
                    }
                }
                developers {
                    developer {
                        name = 'Simon Poole'
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['maven']
    pkg {
        repo = 'geo'
        name = ourName
        licenses = [spdxId]
        vcsUrl = repoUrl
        version {
            name = "${project.version}"
            released  = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = System.getenv('BINTRAY_PASSPHRASE')
            }
        }
    }
}
